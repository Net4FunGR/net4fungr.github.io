<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>K8s - Tag</title><link>https://net4fungr.github.io/tags/k8s/</link><description>Becos :: Back Blog</description><generator>Hugo 0.147.2 &amp; FixIt v0.3.20</generator><language>en</language><managingEditor>mkaliotis(at)gmail(dot)com (becos76)</managingEditor><webMaster>mkaliotis(at)gmail(dot)com (becos76)</webMaster><lastBuildDate>Wed, 06 Jul 2022 15:36:24 +0300</lastBuildDate><atom:link href="https://net4fungr.github.io/tags/k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>k8s Ansible</title><link>https://net4fungr.github.io/posts/k8s-ansible/</link><pubDate>Wed, 06 Jul 2022 15:36:24 +0300</pubDate><guid>https://net4fungr.github.io/posts/k8s-ansible/</guid><category domain="https://net4fungr.github.io/categories/ansible/">Ansible</category><description>Yet another post about using ansible to provision a kubernetes single control node cluster with kubeadm. We start off by manually provisioning the linux VMs in EVE-NG with a pre-defined username/passwd and dynamic IP addresses. Ansible takes care all the automation tasks to deploy the cluster on the VMs.</description></item><item><title>Kube my router up! - Last Part</title><link>https://net4fungr.github.io/posts/kube-my-router-pt3/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0300</pubDate><guid>https://net4fungr.github.io/posts/kube-my-router-pt3/</guid><category domain="https://net4fungr.github.io/categories/art-of-labbing/">Art of Labbing</category><description>Final part of testing google&amp;rsquo;s KNE - Installing and using kne_cli to build topologies using srlinux and cEOS.</description></item><item><title>Kube my router up! - Part Two</title><link>https://net4fungr.github.io/posts/kube-my-router-pt2/</link><pubDate>Tue, 31 May 2022 12:40:24 +0300</pubDate><guid>https://net4fungr.github.io/posts/kube-my-router-pt2/</guid><category domain="https://net4fungr.github.io/categories/art-of-labbing/">Art of Labbing</category><description>This is the second part of a three-part blog post around googleâ€™s Kubernetes based Network Emulation (KNE) software. In this part, I am showing how to deploy a k8s cluster with a single control node using kubeadm over the VMs created during the first part.</description></item></channel></rss>